
//	typedef struct tagPDEX {
//    DWORD lStructSize;
//    HWND hwndOwner;
//    HGLOBAL hDevMode;
//    HGLOBAL hDevNames;
//    HDC hDC;
//    DWORD Flags;
//    DWORD Flags2;
//    DWORD ExclusionFlags;
//    DWORD nPageRanges;
//    DWORD nMaxPageRanges;
//    LPPRINTPAGERANGE lpPageRanges;
//    DWORD nMinPage;
//    DWORD nMaxPage;
//    DWORD nCopies;
//    HINSTANCE hInstance;
//    LPCTSTR lpPrintTemplateName;
//    LPUNKNOWN lpCallback;
//    DWORD nPropertyPages;
//    HPROPSHEETPAGE *lphPropertyPages;
//    DWORD nStartPage;
//    DWORD dwResultAction;
//} PRINTDLGEX, *LPPRINTDLGEX;


DWORD StartDocPrinter(
  HANDLE hPrinter,  // handle to printer object
  DWORD Level,      // information level
  LPBYTE pDocInfo   // information buffer
);

BOOL GetJob(
  HANDLE hPrinter,    // handle to printer
  DWORD JobId,        // job identifier
  DWORD Level,        // information level
  LPBYTE pJob,        // array of jobs
  DWORD cbBuf,        // bytes in array
  LPDWORD pcbNeeded   // bytes received or required
);


typedef struct _JOB_INFO_1 {
  DWORD  JobId;
  LPTSTR pPrinterName;
  LPTSTR pMachineName;
  LPTSTR pUserName;
  LPTSTR pDocument;
  LPTSTR pDatatype;
  LPTSTR pStatus;
  DWORD  Status;
  DWORD  Priority;
  DWORD  Position;
  DWORD  TotalPages;
  DWORD  PagesPrinted;
  SYSTEMTIME Submitted;
} JOB_INFO_1, *PJOB_INFO_1; 


typedef struct _JOB_INFO_2 {
  DWORD      JobId;
  LPTSTR     pPrinterName;
  LPTSTR     pMachineName;
  LPTSTR     pUserName;
  LPTSTR     pDocument;
  LPTSTR     pNotifyName;
  LPTSTR     pDatatype;
  LPTSTR     pPrintProcessor;
  LPTSTR     pParameters;
  LPTSTR     pDriverName;
  LPDEVMODE  pDevMode;
  LPTSTR     pStatus;
  PSECURITY_DESCRIPTOR pSecurityDescriptor;
  DWORD      Status;
  DWORD      Priority;
  DWORD      Position;
  DWORD      StartTime;
  DWORD      UntilTime;
  DWORD      TotalPages;
  DWORD      Size;
  SYSTEMTIME Submitted;
  DWORD      Time;
  DWORD      PagesPrinted;
} JOB_INFO_2, *PJOB_INFO_2; 







BOOL OpenPrinter(
  LPTSTR pPrinterName,         // printer or server name
  LPHANDLE phPrinter,          // printer or server handle
  LPPRINTER_DEFAULTS pDefault  // printer defaults
);
